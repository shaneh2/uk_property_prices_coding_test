# Coding Test Report
This coding test is about using Python Pandas to do some queries about UK property price data.

In this report, I include all the code, and a sample output for each question.

## How to compile:
The command `make` runs the analysis and automatically generates this report:
 * The raw data will be downloaded and saved in feather format using `curl` and `0prepare_data.py` if it hasn't already been.
 * Then the code in `q1.py`,..., `q4.py` will be run.
 * The outputs of the code will be shown in README.md in this directory.

## Requirements
 * I'm using a MacOS 11.2.3 computer, with Xcode command line tools installed (to use `make`).
 * To install the required Python packages, run `make install_required_pip_packages`.
 * If pip isn't installed, try `make install_pip`.

## Loading data from feather file
This data is automatically downloaded: https://www.gov.uk/guidance/about-the-price-paid-data
```{python, name='data import'}
import pandas as pd
FEATHER_FILE_LOCATION = "../data/full_data_feather.feather"
df = pd.read_feather(FEATHER_FILE_LOCATION)
```

# Q1: Most expensive houses by county
Implement a function that will take price paid data and return another DataFrame containing the full details of the largest transaction occurring within each county present in the data.

```{python, source='q1.py', name='Q1'}
```

# Q2: Top 5 districts by quarterly transaction value
Implement a function that will take price paid data and return a DataFrame (indexed by quarter) giving the 5 postcode districts (i.e. AB1 2CD => AB1) with the largest total transaction value for each quarter (and these values).

```{python source ='q2.py', name='Q2'}
```


# Q3: Transaction value concentration
Implement a function that will take price paid data and return a DataFrame, indexed by year and with one column for each property type, giving the percentage of transactions (in descending order of size) that account for 80% of the total transaction value occurring for that property type for each year.

**Property types: D = Detached, S = Semi-Detached, T = Terraced, F = Flats/Maisonettes, O = Other**

```{python, source='q3.py', name='Q3'}
```


# Q4: Volume and median price comparisons

Implement a function that will take two subsets of price paid data and returns a DataFrame showing the percentage change in the number of transactions and their median price between the two datasets, broken down by each of the following price brackets:
  * £0 < x <= 250,000
  * £250,000 < x <= £500,000
  * £500,000 < x <= £750,000
  * £750,000 < x <= £1,000,000
  * £1,000,000 < x <= £2,000,000
  * £2,000,000 < x <= £5,000,000
  * £5,000,000+

```{python,source="q4.py", name='Q4'}
```